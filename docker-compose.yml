version: '3.8'

services:
  # Frontend - Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - DATABASE_URL=postgresql://farmatch:farmatch_dev@db:5432/farmatch_db
    networks:
      - farm-match-network
    depends_on:
      - backend
      - db
    command: npm run dev

  # Backend - FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://farmatch:farmatch_dev@db:5432/farmatch_db
      - PYTHONUNBUFFERED=1
    networks:
      - farm-match-network
    depends_on:
      - db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Database - PostgreSQL
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: farmatch
      POSTGRES_PASSWORD: farmatch_dev
      POSTGRES_DB: farmatch_db
    networks:
      - farm-match-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U farmatch"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  farm-match-network:
    driver: bridge

volumes:
  postgres-data:
